{
  "name": "react-router-postgres-ssr-template",
  "description": "Deploy your own library of books using Postgres and Workers.",
  "private": true,
  "workspaces": ["packages/*"],
  "cloudflare": {
    "label": "React Router SSR template",
    "products": [
      "Workers",
      "Hyperdrive",
      "Cloudflare Vite plugin",
      "Workers Static Assets",
      "Smart Placement"
    ],
    "categories": ["starter", "storage"],
    "docs_url": "https://developers.cloudflare.com/workers/frameworks/framework-guides/react-router/",
    "icon_urls": [],
    "preview_image_url": "https://imagedelivery.net/wSMYJvS3Xw-n339CbDyDIA/8db618d7-0c0e-4ab5-f6f5-721e45b80c00/public",
    "publish": false
  },
  "dependencies": {
    "@myapp/database": "workspace:*",
    "@neondatabase/serverless": "^1.0.1",
    "@types/pg": "^8.15.5",
    "better-sqlite3": "^12.2.0",
    "drizzle-orm": "^0.44.5",
    "isbot": "5.1.26",
    "k6": "^0.0.0",
    "pg": "^8.16.3",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-router": "7.6.3"
  },
  "devDependencies": {
    "@cloudflare/vite-plugin": "1.7.5",
    "@cloudflare/vitest-pool-workers": "^0.5.0",
    "@dotenvx/dotenvx": "^1.49.0",
    "@playwright/test": "^1.48.0",
    "@react-router/dev": "7.6.3",
    "@tailwindcss/postcss": "^4.1.12",
    "@testing-library/jest-dom": "^6.6.0",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/node": "^24.3.0",
    "@types/react": "^19.1.11",
    "@types/react-dom": "^19.1.7",
    "@typescript-eslint/eslint-plugin": "^8.16.0",
    "@typescript-eslint/parser": "^8.16.0",
    "@vitest/coverage-v8": "^2.1.0",
    "@vitest/ui": "^2.1.0",
    "autoprefixer": "^10.4.21",
    "cross-var": "^1.1.0",
    "drizzle-kit": "^0.31.4",
    "eslint": "^9.15.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "hono": "4.8.2",
    "jsdom": "^25.0.1",
    "postcss": "^8.5.6",
    "postgres": "3.4.5",
    "prettier": "^3.3.3",
    "tailwindcss": "^4.1.12",
    "tsx": "^4.20.5",
    "turbo": "^2.5.6",
    "typescript": "^5.9.2",
    "vite": "^6.0.0",
    "vitest": "^2.1.0",
    "wrangler": "^4.32.0"
  },
  "engines": {
    "node": ">=20.16.0 || >=22.3.0"
  },
  "overrides": {
    "@react-router/dev": {
      "wrangler": "^4.2.0"
    }
  },
  "scripts": {
    "build": "react-router build",
    "cf-typegen": "wrangler types",
    "check": "npm run build && wrangler deploy --dry-run",
    "deploy": "wrangler deploy",
    "dev": "react-router dev",
    "start": "wrangler dev",
    "test": "vitest run",
    "test:ci": "CI=true vitest run",
    "test:all": "npm run test:unit && npm run test:components",
    "test:unit": "vitest run --config tests/vitest.config.unit.ts",
    "test:workers": "vitest run --config tests/vitest.config.workers.ts",
    "test:workers:ci": "vitest run --config tests/vitest.config.workers.ts --reporter=json --reporter=default",
    "test:workers:coverage": "echo 'Coverage is not supported for worker tests due to Cloudflare Workers runtime limitations'",
    "test:components": "vitest run --config tests/vitest.config.components.ts",
    "test:integration": "vitest run --config tests/vitest.config.integration.ts",
    "test:e2e": "playwright test --config=tests/playwright.config.ts",
    "test:e2e:ui": "playwright test --config=tests/playwright.config.ts --ui",
    "test:load": "k6 run tests/load/basic-load-test.js",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "analyze:bundle": "npm run build && npx bundlesize",
    "db:generate": "drizzle-kit generate --dialect=postgresql --schema=db/orm/schema.ts --out=db/orm/drizzle",
    "db:migrate": "npx tsx db/orm/migrate.ts",
    "db:seed": "npx tsx db/orm/seed.ts",
    "db:generate:test": "drizzle-kit generate --config=db/drizzle.config.test.ts",
    "db:migrate:test": "npm run -s db:generate:test && cross-var drizzle-kit migrate --config=db/drizzle.config.test.ts",
    "db:seed:test": "node scripts/seed-test-db.js",
    "db:generate:neon": "drizzle-kit generate --config=./db/orm/configs/neon.config.ts",
    "db:generate:supabase": "drizzle-kit generate --config=./db/orm/configs/supabase.config.ts",
    "db:generate:local": "drizzle-kit generate --config=./db/orm/configs/local.config.ts",
    "db:migrate:neon": "drizzle-kit migrate --config=./db/orm/configs/neon.config.ts",
    "db:migrate:supabase": "drizzle-kit migrate --config=./db/orm/configs/supabase.config.ts",
    "db:migrate:local": "drizzle-kit migrate --config=./db/orm/configs/local.config.ts",
    "db:migrate:all": "npm run db:migrate:local && npm run db:migrate:neon && npm run db:migrate:supabase",
    "db:generate:all": "npm run db:generate:local && npm run db:generate:neon && npm run db:generate:supabase",
    "db:status": "npx tsx -e \"import { validateMigrations } from './db/orm/migrations.js'; validateMigrations().then(console.log)\"",
    "db:example": "npx tsx db/orm/examples.ts",
    "db:seed:neon": "npx tsx db/orm/seed.ts neon",
    "db:seed:supabase": "npx tsx db/orm/seed.ts supabase",
    "db:seed:local": "npx tsx db/orm/seed.ts local",
    "migration:analyze": "node scripts/analyze-migration-state.js",
    "migration:backup": "node scripts/backup-database.js",
    "migration:reconcile": "node scripts/reconcile-migrations.js --confirm",
    "migration:validate": "node scripts/validate-migrations.js",
    "migration:execute": "node scripts/execute-migration-strategy.js",
    "prepare": "husky install || true"
  },
  "type": "module",
  "checkImportsMissingDependencies": {
    "cloudflare:test": "?.?.?",
    "virtual:react-router": "?.?.?",
    "cloudflare:workers": "?.?.?",
    "cloudflare:sockets": "?.?.?"
  }
}
